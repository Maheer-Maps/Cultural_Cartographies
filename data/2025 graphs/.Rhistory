library(sf)        # For working with spatial data
library(leaflet)   # For interactive maps (optional)
# Set the file path (modify if needed)
2025_data <- "2025.geojson"
# Set the file path (modify if needed)
data2025 <- "2025.geojson"
data2024 <- "2024.geojson"
data2023 <- "2023.geojson"
data2022 <- "2022.geojson"
data2021 <- "2021.geojson"
data2020 <- "2020.geojson"
data2019 <- "2019.geojson"
data2018 <- "2018.geojson"
data2017 <- "2017.geojson"
data_2025 <- st_read(data2025)
View(data_2025)
amenity_counts <- table(data_2025$amenity)
amenity_table <- as.data.frame(amenity_counts)
names(amenity_table) <- c("Amenity Type", "Count")
View(amenity_table)
data_2024 <- st_read(data2024)
amenity_counts <- table(data_2024$amenity)
amenity_table <- as.data.frame(amenity_counts)
names(amenity_table_24) <- c("Amenity Type", "Count")
View(data_2024)
amenity_counts_24 <- table(data_2024$amenity)
amenity_table_24 <- as.data.frame(amenity_counts_24)
names(amenity_table_24) <- c("Amenity Type", "Count")
View(amenity_table_24)
data_2023 <- st_read(data2023)
amenity_counts_23 <- table(data_2023$amenity)
amenity_table_23 <- as.data.frame(amenity_counts_23)
names(amenity_table_23) <- c("Amenity Type", "Count")
View(amenity_table_23)
data_2022 <- st_read(data2022)
amenity_counts_22 <- table(data_2022$amenity)
amenity_table_22 <- as.data.frame(amenity_counts_22)
names(amenity_table_22) <- c("Amenity Type", "Count")
View(amenity_table_22)
data_2021 <- st_read(data2021)
amenity_counts_21 <- table(data_2021$amenity)
amenity_table_21 <- as.data.frame(amenity_counts_21)
names(amenity_table_21) <- c("Amenity Type", "Count")
View(amenity_table_21)
data_2020 <- st_read(data2020)
amenity_counts_20 <- table(data_2020$amenity)
amenity_table_20 <- as.data.frame(amenity_counts_20)
names(amenity_table_20) <- c("Amenity Type", "Count")
View(amenity_table_20)
data_2019 <- st_read(data2019)
amenity_counts_19 <- table(data_2019$amenity)
amenity_table_19 <- as.data.frame(amenity_counts_19)
names(amenity_table_19) <- c("Amenity Type", "Count")
View(amenity_table_19)
data_2018 <- st_read(data2018)
amenity_counts_18 <- table(data_2018$amenity)
amenity_table_18 <- as.data.frame(amenity_counts_18)
names(amenity_table_18) <- c("Amenity Type", "Count")
View(amenity_table_18)
data_2017 <- st_read(data2017)
amenity_counts_17 <- table(data_2017$amenity)
amenity_table_17 <- as.data.frame(amenity_counts_17)
names(amenity_table_17) <- c("Amenity Type", "Count")
View(amenity_table_17)
# Load the data from the CSV file
arts_centres <- read.csv("Arts_centres.csv")
# Display the data
print(arts_centres)
View(arts_centres)
# Generate a frequency table for the 'borough_name' column
art_centre_counts <- table(arts_centres$art_centre_counts)
# Display the frequency table
print(art_centre_counts)
# Generate a frequency table for the 'borough_name' column
art_centre_counts <- table(arts_centres$borough_name)
# Display the frequency table
print(art_centre_counts)
# Load the data from the CSV file
arts_centres <- read.csv("Arts_centres.csv")
# Generate a frequency table for the 'borough_name' column
art_centre_counts <- table(arts_centres$borough_name)
# Convert the table to a data frame
art_centre_counts_df <- as.data.frame(art_centre_counts)
# Display the data frame
print(art_centre_counts_df)
View(arts_centres)
View(art_centre_counts_df)
community_centre <- read.csv("Community_Centres_2019.csv")
community_centre_counts <- table(community_centre$borough_name)
community_centre_counts_df <- as.data.frame(community_centre_counts)
print(community_centre_counts_df)
View(community_centre_counts_df)
mus_gals <- read.csv("Museums_and_Galleries_2019.csv")
View(mus_gals)
mus_gals <- read.csv("Museums_and_Galleries_2019.csv")
mus_gals_counts <- table(mus_gals$borough_name)
mus_gals_counts_df <- as.data.frame(mus_gals_counts)
print(mus_gals_counts_df)
View(mus_gals_counts_df)
theatres <- read.csv("Theatres_2019.csv")
theatres_counts <- table(theatres$borough_name)
theatres_counts_df <- as.data.frame(theatres_counts)
print(theatres_counts_df)
View(theatres_counts_df)
# Load necessary package
library(readr)
# Load the datasets
cinema_data <- read_csv("Cinema 2023.csv")
libraries_data <- read_csv("Libraries 2023.csv")
# Create frequency tables for 'borough_name'
cinema_borough_counts <- table(cinema_data$borough_name)
libraries_borough_counts <- table(libraries_data$borough_name)
# Display the frequency tables
print("Cinema Borough Frequency:")
print(cinema_borough_counts)
print("Library Borough Frequency:")
print(libraries_borough_counts)
View(libraries_data)
# Load the datasets
cinema_data <- read_csv("Cinema 2023.csv")
libraries_data <- read_csv("Libraries 2023.csv")
# Create frequency tables for 'borough_name'
cinema_borough_counts <- table(cinema_data$borough_name)
libraries_borough_counts <- table(libraries_data$borough_name)
# Convert tables to data frames
cinema_borough_df <- as.data.frame(cinema_borough_counts)
libraries_borough_df <- as.data.frame(libraries_borough_counts)
# Rename columns for clarity
colnames(cinema_borough_df) <- c("borough_name", "count")
colnames(libraries_borough_df) <- c("borough_name", "count")
# Save as CSV files
write.csv(cinema_borough_df, "Cinema_Borough_Counts.csv", row.names = FALSE)
write.csv(libraries_borough_df, "Library_Borough_Counts.csv", row.names = FALSE)
# Load required libraries
library(sf)
library(dplyr)
library(tidyr)
# Load the shapefile of London boroughs
boroughs <- st_read("London_Borough/London_Borough_Excluding_MHW.shp")
# Load the GeoJSON files
pins_2017 <- st_read("2017.geojson")
pins_2025 <- st_read("2025.geojson")
# Define target CRS (British National Grid - EPSG:27700)
target_crs <- 27700
# Transform all spatial layers to target CRS
boroughs <- st_transform(boroughs, target_crs)
pins_2017 <- st_transform(pins_2017, target_crs)
pins_2025 <- st_transform(pins_2025, target_crs)
# Spatial join to assign boroughs to each point
pins_2017_joined <- st_join(pins_2017, boroughs, left = FALSE)
pins_2025_joined <- st_join(pins_2025, boroughs, left = FALSE)
# Count the number of amenities per borough
table_2017 <- pins_2017_joined %>%
st_drop_geometry() %>%
count(BOROUGH_NAME = NAME, amenity) %>%
pivot_wider(names_from = amenity, values_from = n, values_fill = 0)
table_2025 <- pins_2025_joined %>%
st_drop_geometry() %>%
count(BOROUGH_NAME = NAME, amenity) %>%
pivot_wider(names_from = amenity, values_from = n, values_fill = 0)
# Print the resulting tables
cat("Table for 2017 amenities:\n")
print(table_2017)
cat("\nTable for 2025 amenities:\n")
print(table_2025)
# Save the tables as CSV files
write.csv(table_2017, "table_2017.csv", row.names = FALSE)
write.csv(table_2025, "table_2025.csv", row.names = FALSE)
